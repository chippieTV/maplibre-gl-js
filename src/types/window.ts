// /* global EventTarget, IDBEnvironment */

// export interface Window extends EventTarget, IDBEnvironment {
//   readonly caches: CacheStorage;
//   readonly clientInformation: Navigator;
//   readonly closed: boolean;
//   defaultStatus: string;
//   readonly devicePixelRatio: number;
//   readonly document: Document;
//   readonly doNotTrack: string;
//   readonly frameElement: Element;
//   readonly frames: Window;
//   readonly history: History;
//   readonly innerHeight: number;
//   readonly innerWidth: number;
//   readonly isSecureContext: boolean;
//   readonly length: number;
//   readonly location: Location;
//   readonly origin: string;
//   name: string;
//   readonly navigator: Navigator;
//   readonly InstallTrigger: any;
//   offscreenBuffering: string | boolean;
//   onabort: (ev: UIEvent) => boolean | undefined | null;
//   onafterprint: (ev: Event) => boolean | undefined | null;
//   onbeforeprint: (ev: Event) => boolean | undefined | null;
//   onbeforeunload: (ev: Event) => boolean | undefined | null;
//   onblur: (ev: FocusEvent) => boolean | undefined | null;
//   oncanplay: (ev: Event) => boolean | undefined | null;
//   oncanplaythrough: (ev: Event) => boolean | undefined | null;
//   onchange: (ev: Event) => boolean | undefined | null;
//   onclick: (ev: MouseEvent) => boolean | undefined | null;
//   oncompassneedscalibration: (ev: Event) => boolean | undefined | null;
//   oncontextmenu: (ev: Event) => boolean | undefined | null;
//   ondblclick: (ev: MouseEvent) => boolean | undefined | null;
//   ondevicelight: (ev: Event) => boolean | undefined | null;
//   ondevicemotion: (ev: Event) => boolean | undefined | null;
//   ondeviceorientation: (ev: Event) => boolean | undefined | null;
//   ondrag: (ev: DragEvent) => boolean | undefined | null;
//   ondragend: (ev: DragEvent) => boolean | undefined | null;
//   ondragenter: (ev: DragEvent) => boolean | undefined | null;
//   ondragleave: (ev: DragEvent) => boolean | undefined | null;
//   ondragover: (ev: DragEvent) => boolean | undefined | null;
//   ondragstart: (ev: DragEvent) => boolean | undefined | null;
//   ondrop: (ev: DragEvent) => boolean | undefined | null;
//   ondurationchange: (ev: Event) => boolean | undefined | null;
//   onemptied: (ev: Event) => boolean | undefined | null;
//   onended: (ev: Event) => boolean | undefined | null;
//   onerror: (ev: Event) => boolean | undefined | null;
//   onfocus: (ev: FocusEvent) => boolean | undefined | null;
//   onhashchange: (ev: Event) => boolean | undefined | null;
//   oninput: (ev: Event) => boolean | undefined | null;
//   oninvalid: (ev: Event) => boolean | undefined | null;
//   onkeydown: (ev: KeyboardEvent) => boolean | undefined | null;
//   onkeypress: (ev: KeyboardEvent) => boolean | undefined | null;
//   onkeyup: (ev: KeyboardEvent) => boolean | undefined | null;
//   onload: (ev: Event) => boolean | undefined | null;
//   onloadeddata: (ev: Event) => boolean | undefined | null;
//   onloadedmetadata: (ev: Event) => boolean | undefined | null;
//   onloadstart: (ev: Event) => boolean | undefined | null;
//   onmessage: (ev: MessageEvent) => boolean | undefined | null;
//   onmousedown: (ev: MouseEvent) => boolean | undefined | null;
//   onmouseenter: (ev: MouseEvent) => boolean | undefined | null;
//   onmouseleave: (ev: MouseEvent) => boolean | undefined | null;
//   onmousemove: (ev: MouseEvent) => boolean | undefined | null;
//   onmouseout: (ev: MouseEvent) => boolean | undefined | null;
//   onmouseover: (ev: MouseEvent) => boolean | undefined | null;
//   onmouseup: (ev: MouseEvent) => boolean | undefined | null;
//   onmousewheel: (ev: WheelEvent) => boolean | undefined | null;
//   onoffline: (ev: Event) => boolean | undefined | null;
//   ononline: (ev: Event) => boolean | undefined | null;
//   onorientationchange: (ev: Event) => boolean | undefined | null;
//   onpagehide: (ev: Event) => boolean | undefined | null;
//   onpageshow: (ev: Event) => boolean | undefined | null;
//   onpause: (ev: Event) => boolean | undefined | null;
//   onplay: (ev: Event) => boolean | undefined | null;
//   onplaying: (ev: Event) => boolean | undefined | null;
//   onpopstate: (ev: Event) => boolean | undefined | null;
//   onprogress: (ev: ProgressEvent) => boolean | undefined | null;
//   onratechange: (ev: Event) => boolean | undefined | null;
//   onreadystatechange: (ev: ProgressEvent) => boolean | undefined | null;
//   onreset: (ev: Event) => boolean | undefined | null;
//   onresize: (ev: UIEvent) => boolean | undefined | null;
//   onscroll: (ev: UIEvent) => boolean | undefined | null;
//   onseeked: (ev: Event) => boolean | undefined | null;
//   onseeking: (ev: Event) => boolean | undefined | null;
//   onselect: (ev: UIEvent) => boolean | undefined | null;
//   onstalled: (ev: Event) => boolean | undefined | null;
//   onstorage: (ev: Event) => boolean | undefined | null;
//   onsubmit: (ev: Event) => boolean | undefined | null;
//   onsuspend: (ev: Event) => boolean | undefined | null;
//   ontimeupdate: (ev: Event) => boolean | undefined | null;
//   ontouchcancel: (ev: TouchEvent) => boolean | undefined | null;
//   ontouchend: (ev: TouchEvent) => boolean | undefined | null;
//   ontouchmove: (ev: TouchEvent) => boolean | undefined | null;
//   ontouchstart: (ev: TouchEvent) => boolean | undefined | null;
//   onunload: (ev: Event) => boolean | undefined | null;
//   onvolumechange: (ev: Event) => boolean | undefined | null;
//   onwaiting: (ev: Event) => boolean | undefined | null;
//   opener: Window;
//   orientation: string | number;
//   readonly outerHeight: number;
//   readonly outerWidth: number;
//   readonly pageXOffset: number;
//   readonly pageYOffset: number;
//   readonly parent: Window;
//   readonly performance: Performance;
//   readonly screen: Screen;
//   readonly screenLeft: number;
//   readonly screenTop: number;
//   readonly screenX: number;
//   readonly screenY: number;
//   readonly scrollX: number;
//   readonly scrollY: number;
//   readonly self: Window;
//   status: string;
//   readonly top: Window;
//   readonly window: Window;
//   Blob: typeof Blob;
//   HTMLImageElement: typeof HTMLImageElement;
//   HTMLElement: typeof HTMLElement;
//   HTMLVideoElement: typeof HTMLVideoElement;
//   HTMLCanvasElement: typeof HTMLCanvasElement;
//   Image: typeof Image;
//   ImageData: typeof ImageData;
//   URL: typeof URL;
//   URLSearchParams: typeof URLSearchParams;
//   WebGLFramebuffer: typeof WebGLFramebuffer;
//   WheelEvent: typeof WheelEvent;
//   Worker: typeof Worker;
//   XMLHttpRequest: typeof XMLHttpRequest;
//   Request: typeof Request;
//   AbortController: typeof AbortController;
//   alert(message?: string): void;
//   blur(): void;
//   captureEvents(): void;
//   close(): void;
//   confirm(message?: string): boolean;
//   focus(): void;
//   getComputedStyle(elt: Element, pseudoElt?: string): CSSStyleDeclaration;
//   getMatchedCSSRules(elt: Element, pseudoElt?: string): CSSRuleList;
//   getSelection(): Selection;
//   moveBy(x?: number, y?: number): void;
//   moveTo(x?: number, y?: number): void;
//   msWriteProfilerMark(profilerMarkName: string): void;
//   open(url?: string, target?: string, features?: string, replace?: boolean): Window;
//   postMessage(message: unknown, targetOrigin: string, transfer?: ArrayBuffer[]): void;
//   print(): void;
//   prompt(message?: string, _default?: string): string | null;
//   releaseEvents(): void;
//   resizeBy(x?: number, y?: number): void;
//   resizeTo(x?: number, y?: number): void;
//   scroll(x?: number, y?: number): void;
//   scrollBy(x?: number, y?: number): void;
//   scrollTo(x?: number, y?: number): void;
//   stop(): void;
//   clearInterval(intervalId?: number): void;
//   clearTimeout(timeoutId?: number): void;
//   setTimeout(callback: () => void, ms?: number): number;
//   setInterval(callback: () => void, ms?: number): number;
//   requestAnimationFrame(callback: (timestamp: number) => void): number;
//   cancelAnimationFrame(handle: number): void;
//   msRequestAnimationFrame(callback: (timestamp: number) => void): number;
//   msCancelAnimationFrame(handle: number): void;
//   webkitRequestAnimationFrame(callback: (timestamp: number) => void): number;
//   webkitCancelAnimationFrame(handle: number): void;
// }
